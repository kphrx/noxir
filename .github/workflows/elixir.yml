# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  ELIXIR_VERSION: '1.15.2'
  OTP_VERSION: '26.0'

permissions:
  contents: read
  pull-requests: write

jobs:
  deps:

    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - run: mix deps.get


  reviewdog-format:

    name: Formatting
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: deps

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

    - name: Run format
      run: mix format
    - name: Reviewdog suggester / mix format
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: mix format
        filter_mode: file
        fail_on_error: true


  reviewdog-credo:

    name: Code analysis
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: deps

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

    - uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest
    - name: Run credo with reviewdog
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
      run: |
        reviewdog -reporter=github-pr-review -runners=credo -filter-mode=file -fail-on-error


  reviewdog-dialyzer:

    name: Type checking
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: deps

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

    - name: Restore PLT cache
      uses: actions/cache@v3
      id: plt_cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-plt-
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest
    - name: Run dialyzer with reviewdog
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
      run: |
        reviewdog -reporter=github-pr-review -runners=dialyzer -filter-mode=file -fail-on-error
